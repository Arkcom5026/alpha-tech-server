// ‚úÖ routes/authRoutes.js (CommonJS)
const express = require('express');
const router = express.Router();

const { login,register } = require('../controllers/authController');
const { verifyToken } = require('../middlewares/verifyToken');
const { protectRole } = require('../middlewares/protectRole');
const { validateRegister } = require('../middlewares/validateRegister');

// üîê Login route
router.post('/login', login);
// ‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å (Register)
router.post('/register', validateRegister, register);

// üß™ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ verifyToken + protectRole
router.get('/me', verifyToken, (req, res) => {
  res.json({ user: req.user, branchId: req.branchId });
});

router.get('/admin-only', verifyToken, protectRole('admin'), (req, res) => {
  res.json({ message: '‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ' });
});

router.get('/employee-or-admin', verifyToken, protectRole('admin', 'employee'), (req, res) => {
  res.json({ message: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ' });
});

module.exports = router;
