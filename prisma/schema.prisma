// ‚úÖ FINALIZED Prisma Schema ‚Äî ‡∏£‡∏∞‡∏ö‡∏ö Online + POS + Purchasing + Services

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  customer
  employee
  admin
}

enum PurchaseOrderStatus {
  PENDING
  PARTIAL
  COMPLETED
  CANCELLED
}

enum OrderStatus {
  NOT_PROCESS
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum StockStatus {
  IN_STOCK
  SOLD
  RETURNED
  DAMAGED
}

enum ServiceStatus {
  RECEIVED
  IN_PROGRESS
  WAITING_PARTS
  COMPLETED
  CANCELLED
}

enum ReceiptStatus {
  PENDING
  COMPLETED
  CANCELLED
}

// üîê User & Profiles
model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  password    String
  role        Role
  enabled     Boolean   @default(true)
  lastLoginAt DateTime?

  customerProfile CustomerProfile?
  employeeProfile EmployeeProfile?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomerProfile {
  id      Int     @id @default(autoincrement())
  name    String?
  picture String?
  address String?
  phone   String?

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  orders   Order[]
  cart     Cart[]
  services ServiceOrder[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EmployeeProfile {
  id    Int     @id @default(autoincrement())
  name  String?
  phone String?

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  branch   Branch? @relation(fields: [branchId], references: [id])
  branchId Int?

  position   Position? @relation(fields: [positionId], references: [id])
  positionId Int?

  purchaseOrderCreated PurchaseOrder[]
  assignedServices     ServiceOrder[]
  approved             Boolean         @default(false)
  active               Boolean         @default(true)
  stockItem            StockItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// üè¢ HR
model Branch {
  id      Int    @id @default(autoincrement())
  name    String
  address String

  employees       EmployeeProfile[]
  stock           StockItem[]
  suppliers       Supplier[]
  pos             PurchaseOrder[]
  services        ServiceOrder[]
  products        Product[]
  productPrice    ProductPrice[]
  productTemplate ProductTemplate[]

  RBACEnabled Boolean @default(true)

  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  purchaseOrderReceipt PurchaseOrderReceipt[]
  barcodeCounter       BarcodeCounter[]
  barcodeReceiptItem   BarcodeReceiptItem[]
}

model Position {
  id        Int               @id @default(autoincrement())
  name      String
  employees EmployeeProfile[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  active Boolean @default(true)

  productTypes ProductType[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductType {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  active Boolean @default(true)

  profiles ProductProfile[]

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductProfile {
  id          Int     @id @default(autoincrement())
  name        String
  description String?

  productType   ProductType @relation(fields: [productTypeId], references: [id])
  productTypeId Int

  templates ProductTemplate[]

  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductTemplate {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  spec        String?
  warranty    Int?
  noSN        Boolean @default(false)
  codeType    String  @default("D")
  active      Boolean @default(true)

  productProfile   ProductProfile @relation(fields: [productProfileId], references: [id])
  productProfileId Int

  branch   Branch @relation(fields: [branchId], references: [id])
  branchId Int

  templateImages ProductTemplateImage[]
  products       Product[]
  unit           Unit?                  @relation(fields: [unitId], references: [id])
  unitId         Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int     @id @default(autoincrement())
  title       String?
  description String?

  spec      String?
  costPrice Float?
  sold      Int     @default(0)
  quantity  Int?
  warranty  Int?
  noSN      Boolean @default(false)
  codeType  String  @default("D")
  active    Boolean @default(true)

  unit   Unit? @relation(fields: [unitId], references: [id])
  unitId Int?

  template   ProductTemplate @relation(fields: [templateId], references: [id])
  templateId Int

  branch   Branch @relation(fields: [branchId], references: [id])
  branchId Int

  updatedByBranchId  Int?
  prices             ProductPrice[]
  productImages      ProductImage[]
  stockItems         StockItem[]
  purchaseOrderItems PurchaseOrderItem[]
  orderItems         ProductOnOrder[]
  cartItems          ProductOnCart[]
  serviceItems       ServiceItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductImage {
  id         Int     @id @default(autoincrement())
  public_id  String  @unique
  url        String
  secure_url String
  active     Boolean @default(true)

  caption String? // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
  isCover Boolean? // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductTemplateImage {
  id         Int    @id @default(autoincrement())
  public_id  String @unique
  url        String
  secure_url String

  templateId Int
  template   ProductTemplate @relation(fields: [templateId], references: [id])
  active     Boolean         @default(true)

  caption String? // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
  isCover Boolean? // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductPrice {
  id        Int     @id @default(autoincrement())
  level     Int
  price     Float
  active    Boolean @default(true)
  productId Int
  product   Product @relation(fields: [productId], references: [id])

  branch   Branch @relation(fields: [branchId], references: [id])
  branchId Int

  @@unique([productId, branchId, level])
}

model Unit {
  id   Int    @id @default(autoincrement())
  name String @unique

  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  product         Product[]
  productTemplate ProductTemplate[]
}

// üì¶ Stock System
model StockItem {
  id                   Int              @id @default(autoincrement())
  barcode              String           @unique
  serialNumber         String?
  qrCodeData           String?
  buyPrice             Float // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÉ‡∏ö‡∏£‡∏±‡∏ö (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç)
  sellPrice            Float?
  receivedAt           DateTime         @default(now())
  warrantyDays         Int?
  expiredAt            DateTime?
  soldAt               DateTime?
  status               StockStatus      @default(IN_STOCK)
  remark               String?
  locationCode         String? // ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á ‡πÄ‡∏ä‡πà‡∏ô A1, Shelf-3
  source               String? // ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô PURCHASE_ORDER, CLAIM, GIFT
  tag                  String? // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡πâ‡∏≤‡∏¢‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏© ‡πÄ‡∏ä‡πà‡∏ô PROMO2025
  batchNumber          String? // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏•‡∏≠‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  checkedBy            String? // ‡∏ä‡∏∑‡πà‡∏≠/‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  barcodeReceiptItemId String?
  scannedAt            DateTime         @default(now())
  scannedByEmployeeId  Int?
  scannedBy            EmployeeProfile? @relation(fields: [scannedByEmployeeId], references: [id])

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  branch   Branch @relation(fields: [branchId], references: [id])
  branchId Int

  purchaseOrderReceiptItem   PurchaseOrderReceiptItem? @relation(fields: [purchaseOrderReceiptItemId], references: [id])
  purchaseOrderReceiptItemId Int?

  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  BarcodeReceiptItem BarcodeReceiptItem[]
}

// üßæ Purchasing
model Supplier {
  id             Int             @id @default(autoincrement())
  name           String
  contactPerson  String?
  phone          String?
  email          String?
  taxId          String?
  address        String?
  province       String?
  postalCode     String?
  country        String?         @default("Thailand")
  paymentTerms   Int?            @default(30)
  creditLimit    Float?
  currentBalance Float?          @default(0)
  bankId         Int?
  accountNumber  String?
  accountType    String?
  notes          String?
  branchId       Int?
  active         Boolean         @default(true)
  bank           Bank?           @relation(fields: [bankId], references: [id])
  branch         Branch?         @relation(fields: [branchId], references: [id])
  pos            PurchaseOrder[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bank {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  supplier  Supplier[]
  active    Boolean    @default(true)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model PurchaseOrder {
  id     Int                 @id @default(autoincrement())
  code   String              @unique
  date   DateTime            @default(now())
  note   String?
  status PurchaseOrderStatus @default(PENDING)

  supplierId Int
  branchId   Int
  employeeId Int

  supplier Supplier        @relation(fields: [supplierId], references: [id])
  branch   Branch          @relation(fields: [branchId], references: [id])
  employee EmployeeProfile @relation(fields: [employeeId], references: [id])

  items    PurchaseOrderItem[]
  receipts PurchaseOrderReceipt[]
  payments PurchaseOrderPayment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PurchaseOrderItem {
  id Int @id @default(autoincrement())

  productId        Int
  quantity         Int
  receivedQuantity Int                        @default(0)
  price            Float
  receipts         PurchaseOrderReceiptItem[]

  purchaseOrder   PurchaseOrder @relation(fields: [purchaseOrderId], references: [id])
  purchaseOrderId Int

  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PurchaseOrderReceipt {
  id Int @id @default(autoincrement())
  code      String   @unique  
  receivedAt DateTime @default(now())
  note       String?

  status       ReceiptStatus @default(PENDING)
  receivedById Int

  branch   Branch @relation(fields: [branchId], references: [id]) // ‚úÖ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö Branch
  branchId Int

  purchaseOrder   PurchaseOrder @relation(fields: [purchaseOrderId], references: [id])
  purchaseOrderId Int

  items              PurchaseOrderReceiptItem[]
  barcodeReceiptItem BarcodeReceiptItem[]
  createdAt          DateTime                   @default(now())
  updatedAt          DateTime                   @updatedAt
}

model PurchaseOrderReceiptItem {
  id                  Int                  @id @default(autoincrement())
  receiptId           Int
  purchaseOrderItemId Int
  quantity            Int
  costPrice           Float
  receipt             PurchaseOrderReceipt @relation(fields: [receiptId], references: [id])
  purchaseOrderItem   PurchaseOrderItem    @relation(fields: [purchaseOrderItemId], references: [id])
  stockItems          StockItem[]
  barcodeReceiptItem  BarcodeReceiptItem[]
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
}

model PurchaseOrderPayment {
  id Int @id @default(autoincrement())

  amount Float
  paidAt DateTime @default(now())
  method String
  note   String?

  purchaseOrder   PurchaseOrder @relation(fields: [purchaseOrderId], references: [id])
  purchaseOrderId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// üõí Online Order + Cart
model Order {
  id              Int         @id @default(autoincrement())
  cartTotal       Float
  orderStatus     OrderStatus @default(NOT_PROCESS)
  stripePaymentId String
  status          String
  amount          Int
  currency        String

  customerId Int?
  customer   CustomerProfile? @relation(fields: [customerId], references: [id])
  products   ProductOnOrder[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductOnOrder {
  id        Int   @id @default(autoincrement())
  productId Int
  orderId   Int
  count     Int
  price     Float

  product Product @relation(fields: [productId], references: [id])
  order   Order   @relation(fields: [orderId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id         Int              @id @default(autoincrement())
  customerId Int?
  customer   CustomerProfile? @relation(fields: [customerId], references: [id])
  cartTotal  Float
  products   ProductOnCart[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductOnCart {
  id        Int   @id @default(autoincrement())
  cartId    Int
  productId Int
  count     Int
  price     Float

  cart    Cart    @relation(fields: [cartId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// üõ†Ô∏è Service System
model ServiceOrder {
  id         Int  @id @default(autoincrement())
  customerId Int?
  branchId   Int?
  employeeId Int?

  receiveDate DateTime      @default(now())
  status      ServiceStatus @default(RECEIVED)
  description String?
  note        String?

  customer CustomerProfile? @relation(fields: [customerId], references: [id])
  branch   Branch?          @relation(fields: [branchId], references: [id])
  employee EmployeeProfile? @relation(fields: [employeeId], references: [id])

  items ServiceItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ServiceItem {
  id           Int     @id @default(autoincrement())
  serviceId    Int
  productId    Int?
  serialNumber String?
  problem      String?
  solution     String?
  cost         Float?

  service ServiceOrder @relation(fields: [serviceId], references: [id])
  product Product?     @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BarcodeCounter {
  id         Int      @id @default(autoincrement())
  branchId   Int
  yearMonth  String // ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: '2506' (‡∏õ‡∏µ 2025 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 06)
  lastNumber Int
  updatedAt  DateTime @updatedAt
  createdAt  DateTime @default(now())

  branch Branch @relation(fields: [branchId], references: [id])

  @@unique([branchId, yearMonth]) // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ã‡πâ‡∏≥‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏î‡∏∑‡∏≠‡∏ô+‡∏™‡∏≤‡∏Ç‡∏≤
}

model BarcodeReceiptItem {
  id            Int    @id @default(autoincrement())
  barcode       String @unique // ‡πÄ‡∏ä‡πà‡∏ô 0225060001
  branchId      Int
  yearMonth     String // ‡πÄ‡∏ä‡πà‡∏ô '2506'
  runningNumber Int // ‡πÄ‡∏ä‡πà‡∏ô 1 ‚Üí 0001
  status        String // READY | SN_RECEIVED | USED | VOID
  receiptItemId Int

  stockItem   StockItem? @relation(fields: [stockItemId], references: [id])
  stockItemId Int?

  purchaseOrderReceiptId Int
  purchaseOrderReceipt   PurchaseOrderReceipt @relation(fields: [purchaseOrderReceiptId], references: [id])

  branch      Branch                   @relation(fields: [branchId], references: [id])
  receiptItem PurchaseOrderReceiptItem @relation(fields: [receiptItemId], references: [id])

  @@unique([branchId, yearMonth, runningNumber])

  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
