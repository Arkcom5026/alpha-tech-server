
// ‚úÖ controllers/uploadController.js
const { cloudinary } = require('../utils/cloudinary');
const prisma = require('../lib/prisma');


const uploadImage = async (req, res) => {
  try {
    console.log('üì• ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û');

    if (!req.files || req.files.length === 0) {
      console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î');
      return res.status(400).json({ error: 'No files uploaded' });
    }

    console.log(`üì¶ ‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${req.files.length} ‡πÑ‡∏ü‡∏•‡πå`);
    req.files.forEach((file, index) => {
      console.log(`üßæ [${index + 1}] filename: ${file.filename}, mimetype: ${file.mimetype}, size: ${file.size}`);
    });

    const uploaded = req.files.map((file) => ({
      url: file.path,
      secure_url: file.path,
      public_id: file.filename,
    }));

    console.log('üñºÔ∏è ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', uploaded);
    res.json(uploaded);
  } catch (error) {
    console.error('‚ùå Cloudinary Upload Error:', error);
    res.status(500).json({ error: 'Upload failed', details: error.message });
  }
};

module.exports = {
  uploadImage,
};
// ‡∏õ‡∏¥‡∏î‡∏ó‡πâ‡∏≤‡∏¢ uploadController.js